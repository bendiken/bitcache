\input texinfo   @c -*-texinfo-*-
@comment %**start of header
@setfilename bitcache.info
@finalout
@include version.texi
@settitle Bitcache Manual @value{VERSION}
@documentencoding UTF-8
@comment %**end of header

@dircategory Software libraries
@direntry
* Bitcache: (bitcache).       A content-addressable storage system.
@end direntry

@copying
This manual is in the public domain.
Anyone is free to copy, modify, publish, use, compile, sell, or distribute
this manual for any purpose, commercial or non-commercial, and by any means.
@end copying

@titlepage
@title Bitcache
@subtitle for version @value{VERSION}, @value{UPDATED-MONTH}
@author by Arto Bendiken (@email{arto@@bendiken.net})
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents

@ifnottex
@node Top
@top Bitcache Manual
@end ifnottex

@menu
* Overview of Bitcache::
* Developing with Bitcache::
* Concept Index::
* Function and Type Index::
@end menu

@comment *********************************************************************

@node Overview of Bitcache
@chapter Overview of Bitcache

Bitcache is a portable C library for implementing content-addressable
storage systems.

@section Installation

TODO

@section Headers and Libraries
@cindex header files
@cindex shared libraries

All declarations needed to develop with Bitcache are collected in the
include file @code{bitcache.h}, which can be used with both C and C++
compilers.

@section Memory Management
@cindex memory management
@findex malloc

In general, @code{libbitcache} does not dynamically allocate any memory.
Choosing a memory-management strategy, whether based on @code{malloc()} or
garbage collection, is explicitly left up to the users of the library.

@section Error Handling
@cindex error handling
@findex errno

Most @code{libbitcache} functions return a signed integer value, wherein a
negative value indicates that the function call failed due to an error. The
returned value is equivalent to @code{-errno}.

@subsection Assertions
@cindex assertions
@findex assert

@code{libbitcache} functions will never @code{assert()} when supplied with
incorrect or invalid input. Rather, they will return @code{-EINVAL} and set
@code{errno} accordingly.

@section Thread Safety
@cindex locking

When compiled with the @code{-DMT} preprocessor flag, all @code{libbitcache}
data structures will automatically be synchronized to ensure thread safety.

@section Data Structures
@cindex data structures

@subsection Identifiers

TODO

@subsection Blocks

TODO

@subsection Filters

TODO

@subsection Sets

TODO

@comment *********************************************************************

@node Developing with Bitcache
@chapter Developing with Bitcache

@section Computing Identifiers
@findex bitcache_id_t

TODO

@section Using Filters
@findex bitcache_filter_t

TODO

@section Using Sets
@findex bitcache_set_t

TODO

@comment *********************************************************************

@node Concept Index
@unnumbered Concept Index
@printindex cp

@comment *********************************************************************

@node Function and Type Index
@unnumbered Function and Type Index
@printindex fn

@comment *********************************************************************

@bye
